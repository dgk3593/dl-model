import{P as oe,S as ae,f as ce,g as se,h as le,i as ue,j as K,k as fe,l as he,C as pe,b as D,m as k,n as de,o as xe,p as q,q as ge,r as Te,B as S,s as P,I as me,t as te,u as Me,N as ye,v as we,w as Ee,L as Ie,x as Ae,y as Re,z as be,E as Ne,F as Se,Q as Le}from"./f_XD4qMHue-three.js";let F,H,_,B;function V(a,e=1/0,s=null){H||(H=new oe(2,2,1,1)),_||(_=new ae({uniforms:{blitTexture:new ce(a)},vertexShader:`
			varying vec2 vUv;
			void main(){
				vUv = uv;
				gl_Position = vec4(position.xy * 1.0,0.,.999999);
			}`,fragmentShader:`
			uniform sampler2D blitTexture; 
			varying vec2 vUv;

			void main(){ 
				gl_FragColor = vec4(vUv.xy, 0, 1);
				
				#ifdef IS_SRGB
				gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );
				#else
				gl_FragColor = texture2D( blitTexture, vUv);
				#endif
			}`})),_.uniforms.blitTexture.value=a,_.defines.IS_SRGB=a.colorSpace==se,_.needsUpdate=!0,B||(B=new le(H,_),B.frustumCulled=!1);const i=new ue,t=new K;t.add(B),s===null&&(s=F=new fe({antialias:!1}));const r=Math.min(a.image.width,e),n=Math.min(a.image.height,e);s.setSize(r,n),s.clear(),s.render(t,i);const o=document.createElement("canvas"),c=o.getContext("2d");o.width=r,o.height=n,c.drawImage(s.domElement,0,0,r,n);const l=new he(o);return l.minFilter=a.minFilter,l.magFilter=a.magFilter,l.wrapS=a.wrapS,l.wrapT=a.wrapT,l.name=a.name,F&&(F.forceContextLoss(),F.dispose(),F=null),l}const X={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class ne{constructor(){this.pluginCallbacks=[],this.register(function(e){return new Pe(e)}),this.register(function(e){return new ze(e)}),this.register(function(e){return new Ve(e)}),this.register(function(e){return new Ye(e)}),this.register(function(e){return new je(e)}),this.register(function(e){return new Ke(e)}),this.register(function(e){return new ke(e)}),this.register(function(e){return new He(e)}),this.register(function(e){return new qe(e)}),this.register(function(e){return new We(e)}),this.register(function(e){return new Xe(e)}),this.register(function(e){return new Je(e)}),this.register(function(e){return new Qe(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,s,i,t){const r=new De,n=[];for(let o=0,c=this.pluginCallbacks.length;o<c;o++)n.push(this.pluginCallbacks[o](r));r.setPlugins(n),r.write(e,s,t).catch(i)}parseAsync(e,s){const i=this;return new Promise(function(t,r){i.parse(e,t,r,s)})}}const T={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},Y="KHR_mesh_quantization",R={};R[ye]=T.NEAREST;R[we]=T.NEAREST_MIPMAP_NEAREST;R[Ee]=T.NEAREST_MIPMAP_LINEAR;R[Ie]=T.LINEAR;R[Ae]=T.LINEAR_MIPMAP_NEAREST;R[Re]=T.LINEAR_MIPMAP_LINEAR;R[be]=T.CLAMP_TO_EDGE;R[Ne]=T.REPEAT;R[Se]=T.MIRRORED_REPEAT;const J={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},_e=new pe,Q=12,Ce=1179937895,ve=2,Z=8,Ue=1313821514,Fe=5130562;function O(a,e){return a.length===e.length&&a.every(function(s,i){return s===e[i]})}function Oe(a){return new TextEncoder().encode(a).buffer}function Ge(a){return O(a.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function Be(a,e,s){const i={min:new Array(a.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(a.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let t=e;t<e+s;t++)for(let r=0;r<a.itemSize;r++){let n;a.itemSize>4?n=a.array[t*a.itemSize+r]:(r===0?n=a.getX(t):r===1?n=a.getY(t):r===2?n=a.getZ(t):r===3&&(n=a.getW(t)),a.normalized===!0&&(n=q.normalize(n,a.array))),i.min[r]=Math.min(i.min[r],n),i.max[r]=Math.max(i.max[r],n)}return i}function ie(a){return Math.ceil(a/4)*4}function j(a,e=0){const s=ie(a.byteLength);if(s!==a.byteLength){const i=new Uint8Array(s);if(i.set(new Uint8Array(a)),e!==0)for(let t=a.byteLength;t<s;t++)i[t]=e;return i.buffer}return a}function $(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function ee(a,e){if(a.toBlob!==void 0)return new Promise(i=>a.toBlob(i,e));let s;return e==="image/jpeg"?s=.92:e==="image/webp"&&(s=.8),a.convertToBlob({type:e,quality:s})}class De{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,s,i={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},i),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const t=this,r=t.buffers,n=t.json;i=t.options;const o=t.extensionsUsed,c=t.extensionsRequired,l=new Blob(r,{type:"application/octet-stream"}),h=Object.keys(o),u=Object.keys(c);if(h.length>0&&(n.extensionsUsed=h),u.length>0&&(n.extensionsRequired=u),n.buffers&&n.buffers.length>0&&(n.buffers[0].byteLength=l.size),i.binary===!0){const m=new FileReader;m.readAsArrayBuffer(l),m.onloadend=function(){const f=j(m.result),p=new DataView(new ArrayBuffer(Z));p.setUint32(0,f.byteLength,!0),p.setUint32(4,Fe,!0);const d=j(Oe(JSON.stringify(n)),32),g=new DataView(new ArrayBuffer(Z));g.setUint32(0,d.byteLength,!0),g.setUint32(4,Ue,!0);const y=new ArrayBuffer(Q),b=new DataView(y);b.setUint32(0,Ce,!0),b.setUint32(4,ve,!0);const G=Q+g.byteLength+d.byteLength+p.byteLength+f.byteLength;b.setUint32(8,G,!0);const x=new Blob([y,g,d,p,f],{type:"application/octet-stream"}),M=new FileReader;M.readAsArrayBuffer(x),M.onloadend=function(){s(M.result)}}}else if(n.buffers&&n.buffers.length>0){const m=new FileReader;m.readAsDataURL(l),m.onloadend=function(){const f=m.result;n.buffers[0].uri=f,s(n)}}else s(n)}serializeUserData(e,s){if(Object.keys(e.userData).length===0)return;const i=this.options,t=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(e.userData));if(i.includeCustomExtensions&&r.gltfExtensions){s.extensions===void 0&&(s.extensions={});for(const n in r.gltfExtensions)s.extensions[n]=r.gltfExtensions[n],t[n]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(s.extras=r)}catch(r){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+r.message)}}getUID(e,s=!1){if(this.uids.has(e)===!1){const t=new Map;t.set(!0,this.uid++),t.set(!1,this.uid++),this.uids.set(e,t)}return this.uids.get(e).get(s)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const i=new D;for(let t=0,r=e.count;t<r;t++)if(Math.abs(i.fromBufferAttribute(e,t).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const s=this.cache;if(s.attributesNormalized.has(e))return s.attributesNormalized.get(e);const i=e.clone(),t=new D;for(let r=0,n=i.count;r<n;r++)t.fromBufferAttribute(i,r),t.x===0&&t.y===0&&t.z===0?t.setX(1):t.normalize(),i.setXYZ(r,t.x,t.y,t.z);return s.attributesNormalized.set(e,i),i}applyTextureTransform(e,s){let i=!1;const t={};(s.offset.x!==0||s.offset.y!==0)&&(t.offset=s.offset.toArray(),i=!0),s.rotation!==0&&(t.rotation=s.rotation,i=!0),(s.repeat.x!==1||s.repeat.y!==1)&&(t.scale=s.repeat.toArray(),i=!0),i&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=t,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,s){if(e===s)return e;function i(f){return f.colorSpace===se?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof k&&(e=V(e)),s instanceof k&&(s=V(s));const t=e?e.image:null,r=s?s.image:null,n=Math.max(t?t.width:0,r?r.width:0),o=Math.max(t?t.height:0,r?r.height:0),c=$();c.width=n,c.height=o;const l=c.getContext("2d");l.fillStyle="#00ffff",l.fillRect(0,0,n,o);const h=l.getImageData(0,0,n,o);if(t){l.drawImage(t,0,0,n,o);const f=i(e),p=l.getImageData(0,0,n,o).data;for(let d=2;d<p.length;d+=4)h.data[d]=f(p[d]/256)*256}if(r){l.drawImage(r,0,0,n,o);const f=i(s),p=l.getImageData(0,0,n,o).data;for(let d=1;d<p.length;d+=4)h.data[d]=f(p[d]/256)*256}l.putImageData(h,0,0);const m=(e||s).clone();return m.source=new de(c),m.colorSpace=xe,m.channel=(e||s).channel,e&&s&&e.channel!==s.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),m}processBuffer(e){const s=this.json,i=this.buffers;return s.buffers||(s.buffers=[{byteLength:0}]),i.push(e),0}processBufferView(e,s,i,t,r){const n=this.json;n.bufferViews||(n.bufferViews=[]);let o;switch(s){case T.BYTE:case T.UNSIGNED_BYTE:o=1;break;case T.SHORT:case T.UNSIGNED_SHORT:o=2;break;default:o=4}let c=e.itemSize*o;r===T.ARRAY_BUFFER&&(c=Math.ceil(c/4)*4);const l=ie(t*c),h=new DataView(new ArrayBuffer(l));let u=0;for(let p=i;p<i+t;p++){for(let d=0;d<e.itemSize;d++){let g;e.itemSize>4?g=e.array[p*e.itemSize+d]:(d===0?g=e.getX(p):d===1?g=e.getY(p):d===2?g=e.getZ(p):d===3&&(g=e.getW(p)),e.normalized===!0&&(g=q.normalize(g,e.array))),s===T.FLOAT?h.setFloat32(u,g,!0):s===T.INT?h.setInt32(u,g,!0):s===T.UNSIGNED_INT?h.setUint32(u,g,!0):s===T.SHORT?h.setInt16(u,g,!0):s===T.UNSIGNED_SHORT?h.setUint16(u,g,!0):s===T.BYTE?h.setInt8(u,g):s===T.UNSIGNED_BYTE&&h.setUint8(u,g),u+=o}u%c!==0&&(u+=c-u%c)}const m={buffer:this.processBuffer(h.buffer),byteOffset:this.byteOffset,byteLength:l};return r!==void 0&&(m.target=r),r===T.ARRAY_BUFFER&&(m.byteStride=c),this.byteOffset+=l,n.bufferViews.push(m),{id:n.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const s=this,i=s.json;return i.bufferViews||(i.bufferViews=[]),new Promise(function(t){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){const n=j(r.result),o={buffer:s.processBuffer(n),byteOffset:s.byteOffset,byteLength:n.byteLength};s.byteOffset+=n.byteLength,t(i.bufferViews.push(o)-1)}})}processAccessor(e,s,i,t){const r=this.json,n={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let o;if(e.array.constructor===Float32Array)o=T.FLOAT;else if(e.array.constructor===Int32Array)o=T.INT;else if(e.array.constructor===Uint32Array)o=T.UNSIGNED_INT;else if(e.array.constructor===Int16Array)o=T.SHORT;else if(e.array.constructor===Uint16Array)o=T.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)o=T.BYTE;else if(e.array.constructor===Uint8Array)o=T.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(i===void 0&&(i=0),(t===void 0||t===1/0)&&(t=e.count),t===0)return null;const c=Be(e,i,t);let l;s!==void 0&&(l=e===s.index?T.ELEMENT_ARRAY_BUFFER:T.ARRAY_BUFFER);const h=this.processBufferView(e,o,i,t,l),u={bufferView:h.id,byteOffset:h.byteOffset,componentType:o,count:t,max:c.max,min:c.min,type:n[e.itemSize]};return e.normalized===!0&&(u.normalized=!0),r.accessors||(r.accessors=[]),r.accessors.push(u)-1}processImage(e,s,i,t="image/png"){if(e!==null){const r=this,n=r.cache,o=r.json,c=r.options,l=r.pending;n.images.has(e)||n.images.set(e,{});const h=n.images.get(e),u=t+":flipY/"+i.toString();if(h[u]!==void 0)return h[u];o.images||(o.images=[]);const m={mimeType:t},f=$();f.width=Math.min(e.width,c.maxTextureSize),f.height=Math.min(e.height,c.maxTextureSize);const p=f.getContext("2d");if(i===!0&&(p.translate(0,f.height),p.scale(1,-1)),e.data!==void 0){s!==ge&&console.error("GLTFExporter: Only RGBAFormat is supported.",s),(e.width>c.maxTextureSize||e.height>c.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const g=new Uint8ClampedArray(e.height*e.width*4);for(let y=0;y<g.length;y+=4)g[y+0]=e.data[y+0],g[y+1]=e.data[y+1],g[y+2]=e.data[y+2],g[y+3]=e.data[y+3];p.putImageData(new ImageData(g,e.width,e.height),0,0)}else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas)p.drawImage(e,0,0,f.width,f.height);else throw new Error("THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.");c.binary===!0?l.push(ee(f,t).then(g=>r.processBufferViewImage(g)).then(g=>{m.bufferView=g})):f.toDataURL!==void 0?m.uri=f.toDataURL(t):l.push(ee(f,t).then(g=>new FileReader().readAsDataURL(g)).then(g=>{m.uri=g}));const d=o.images.push(m)-1;return h[u]=d,d}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const s=this.json;s.samplers||(s.samplers=[]);const i={magFilter:R[e.magFilter],minFilter:R[e.minFilter],wrapS:R[e.wrapS],wrapT:R[e.wrapT]};return s.samplers.push(i)-1}processTexture(e){const i=this.options,t=this.cache,r=this.json;if(t.textures.has(e))return t.textures.get(e);r.textures||(r.textures=[]),e instanceof k&&(e=V(e,i.maxTextureSize));let n=e.userData.mimeType;n==="image/webp"&&(n="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,n)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const c=r.textures.push(o)-1;return t.textures.set(e,c),c}processMaterial(e){const s=this.cache,i=this.json;if(s.materials.has(e))return s.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;i.materials||(i.materials=[]);const t={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=e.color.toArray().concat([e.opacity]);if(O(r,[1,1,1,1])||(t.pbrMetallicRoughness.baseColorFactor=r),e.isMeshStandardMaterial?(t.pbrMetallicRoughness.metallicFactor=e.metalness,t.pbrMetallicRoughness.roughnessFactor=e.roughness):(t.pbrMetallicRoughness.metallicFactor=.5,t.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const o=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),c={index:this.processTexture(o),channel:o.channel};this.applyTextureTransform(c,o),t.pbrMetallicRoughness.metallicRoughnessTexture=c}if(e.map){const o={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(o,e.map),t.pbrMetallicRoughness.baseColorTexture=o}if(e.emissive){const o=e.emissive;if(Math.max(o.r,o.g,o.b)>0&&(t.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),t.emissiveTexture=l}}if(e.normalMap){const o={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(o.scale=e.normalScale.x),this.applyTextureTransform(o,e.normalMap),t.normalTexture=o}if(e.aoMap){const o={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(o.strength=e.aoMapIntensity),this.applyTextureTransform(o,e.aoMap),t.occlusionTexture=o}e.transparent?t.alphaMode="BLEND":e.alphaTest>0&&(t.alphaMode="MASK",t.alphaCutoff=e.alphaTest),e.side===Te&&(t.doubleSided=!0),e.name!==""&&(t.name=e.name),this.serializeUserData(e,t),this._invokeAll(function(o){o.writeMaterial&&o.writeMaterial(e,t)});const n=i.materials.push(t)-1;return s.materials.set(e,n),n}processMesh(e){const s=this.cache,i=this.json,t=[e.geometry.uuid];if(Array.isArray(e.material))for(let x=0,M=e.material.length;x<M;x++)t.push(e.material[x].uuid);else t.push(e.material.uuid);const r=t.join(":");if(s.meshes.has(r))return s.meshes.get(r);const n=e.geometry;let o;e.isLineSegments?o=T.LINES:e.isLineLoop?o=T.LINE_LOOP:e.isLine?o=T.LINE_STRIP:e.isPoints?o=T.POINTS:o=e.material.wireframe?T.LINES:T.TRIANGLES;const c={},l={},h=[],u=[],m={uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},f=n.getAttribute("normal");f!==void 0&&!this.isNormalizedNormalAttribute(f)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),n.setAttribute("normal",this.createNormalizedNormalAttribute(f)));let p=null;for(let x in n.attributes){if(x.slice(0,5)==="morph")continue;const M=n.attributes[x];if(x=m[x]||x.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(x)||(x="_"+x),s.attributes.has(this.getUID(M))){l[x]=s.attributes.get(this.getUID(M));continue}p=null;const E=M.array;x==="JOINTS_0"&&!(E instanceof Uint16Array)&&!(E instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new S(new Uint16Array(E),M.itemSize,M.normalized));const A=this.processAccessor(p||M,n);A!==null&&(x.startsWith("_")||this.detectMeshQuantization(x,M),l[x]=A,s.attributes.set(this.getUID(M),A))}if(f!==void 0&&n.setAttribute("normal",f),Object.keys(l).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const x=[],M=[],w={};if(e.morphTargetDictionary!==void 0)for(const E in e.morphTargetDictionary)w[e.morphTargetDictionary[E]]=E;for(let E=0;E<e.morphTargetInfluences.length;++E){const A={};let W=!1;for(const C in n.morphAttributes){if(C!=="position"&&C!=="normal"){W||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),W=!0);continue}const N=n.morphAttributes[C][E],z=C.toUpperCase(),v=n.attributes[C];if(s.attributes.has(this.getUID(N,!0))){A[z]=s.attributes.get(this.getUID(N,!0));continue}const U=N.clone();if(!n.morphTargetsRelative)for(let I=0,re=N.count;I<re;I++)for(let L=0;L<N.itemSize;L++)L===0&&U.setX(I,N.getX(I)-v.getX(I)),L===1&&U.setY(I,N.getY(I)-v.getY(I)),L===2&&U.setZ(I,N.getZ(I)-v.getZ(I)),L===3&&U.setW(I,N.getW(I)-v.getW(I));A[z]=this.processAccessor(U,n),s.attributes.set(this.getUID(v,!0),A[z])}u.push(A),x.push(e.morphTargetInfluences[E]),e.morphTargetDictionary!==void 0&&M.push(w[E])}c.weights=x,M.length>0&&(c.extras={},c.extras.targetNames=M)}const d=Array.isArray(e.material);if(d&&n.groups.length===0)return null;let g=!1;if(d&&n.index===null){const x=[];for(let M=0,w=n.attributes.position.count;M<w;M++)x[M]=M;n.setIndex(x),g=!0}const y=d?e.material:[e.material],b=d?n.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let x=0,M=b.length;x<M;x++){const w={mode:o,attributes:l};if(this.serializeUserData(n,w),u.length>0&&(w.targets=u),n.index!==null){let A=this.getUID(n.index);(b[x].start!==void 0||b[x].count!==void 0)&&(A+=":"+b[x].start+":"+b[x].count),s.attributes.has(A)?w.indices=s.attributes.get(A):(w.indices=this.processAccessor(n.index,n,b[x].start,b[x].count),s.attributes.set(A,w.indices)),w.indices===null&&delete w.indices}const E=this.processMaterial(y[b[x].materialIndex]);E!==null&&(w.material=E),h.push(w)}g===!0&&n.setIndex(null),c.primitives=h,i.meshes||(i.meshes=[]),this._invokeAll(function(x){x.writeMesh&&x.writeMesh(e,c)});const G=i.meshes.push(c)-1;return s.meshes.set(r,G),G}detectMeshQuantization(e,s){if(this.extensionsUsed[Y])return;let i;switch(s.array.constructor){case Int8Array:i="byte";break;case Uint8Array:i="unsigned byte";break;case Int16Array:i="short";break;case Uint16Array:i="unsigned short";break;default:return}s.normalized&&(i+=" normalized");const t=e.split("_",1)[0];X[t]&&X[t].includes(i)&&(this.extensionsUsed[Y]=!0,this.extensionsRequired[Y]=!0)}processCamera(e){const s=this.json;s.cameras||(s.cameras=[]);const i=e.isOrthographicCamera,t={type:i?"orthographic":"perspective"};return i?t.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:t.perspective={aspectRatio:e.aspect,yfov:q.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(t.name=e.type),s.cameras.push(t)-1}processAnimation(e,s){const i=this.json,t=this.nodeMap;i.animations||(i.animations=[]),e=ne.Utils.mergeMorphTargetTracks(e.clone(),s);const r=e.tracks,n=[],o=[];for(let c=0;c<r.length;++c){const l=r[c],h=P.parseTrackName(l.name);let u=P.findNode(s,h.nodeName);const m=J[h.propertyName];if(h.objectName==="bones"&&(u.isSkinnedMesh===!0?u=u.skeleton.getBoneByName(h.objectIndex):u=void 0),!u||!m)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',l.name),null;const f=1;let p=l.values.length/l.times.length;m===J.morphTargetInfluences&&(p/=u.morphTargetInfluences.length);let d;l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(d="CUBICSPLINE",p/=3):l.getInterpolation()===me?d="STEP":d="LINEAR",o.push({input:this.processAccessor(new S(l.times,f)),output:this.processAccessor(new S(l.values,p)),interpolation:d}),n.push({sampler:o.length-1,target:{node:t.get(u),path:m}})}return i.animations.push({name:e.name||"clip_"+i.animations.length,samplers:o,channels:n}),i.animations.length-1}processSkin(e){const s=this.json,i=this.nodeMap,t=s.nodes[i.get(e)],r=e.skeleton;if(r===void 0)return null;const n=e.skeleton.bones[0];if(n===void 0)return null;const o=[],c=new Float32Array(r.bones.length*16),l=new te;for(let u=0;u<r.bones.length;++u)o.push(i.get(r.bones[u])),l.copy(r.boneInverses[u]),l.multiply(e.bindMatrix).toArray(c,u*16);return s.skins===void 0&&(s.skins=[]),s.skins.push({inverseBindMatrices:this.processAccessor(new S(c,16)),joints:o,skeleton:i.get(n)}),t.skin=s.skins.length-1}processNode(e){const s=this.json,i=this.options,t=this.nodeMap;s.nodes||(s.nodes=[]);const r={};if(i.trs){const o=e.quaternion.toArray(),c=e.position.toArray(),l=e.scale.toArray();O(o,[0,0,0,1])||(r.rotation=o),O(c,[0,0,0])||(r.translation=c),O(l,[1,1,1])||(r.scale=l)}else e.matrixAutoUpdate&&e.updateMatrix(),Ge(e.matrix)===!1&&(r.matrix=e.matrix.elements);if(e.name!==""&&(r.name=String(e.name)),this.serializeUserData(e,r),e.isMesh||e.isLine||e.isPoints){const o=this.processMesh(e);o!==null&&(r.mesh=o)}else e.isCamera&&(r.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const o=[];for(let c=0,l=e.children.length;c<l;c++){const h=e.children[c];if(h.visible||i.onlyVisible===!1){const u=this.processNode(h);u!==null&&o.push(u)}}o.length>0&&(r.children=o)}this._invokeAll(function(o){o.writeNode&&o.writeNode(e,r)});const n=s.nodes.push(r)-1;return t.set(e,n),n}processScene(e){const s=this.json,i=this.options;s.scenes||(s.scenes=[],s.scene=0);const t={};e.name!==""&&(t.name=e.name),s.scenes.push(t);const r=[];for(let n=0,o=e.children.length;n<o;n++){const c=e.children[n];if(c.visible||i.onlyVisible===!1){const l=this.processNode(c);l!==null&&r.push(l)}}r.length>0&&(t.nodes=r),this.serializeUserData(e,t)}processObjects(e){const s=new K;s.name="AuxScene";for(let i=0;i<e.length;i++)s.children.push(e[i]);this.processScene(s)}processInput(e){const s=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(t){t.beforeParse&&t.beforeParse(e)});const i=[];for(let t=0;t<e.length;t++)e[t]instanceof K?this.processScene(e[t]):i.push(e[t]);i.length>0&&this.processObjects(i);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let t=0;t<s.animations.length;++t)this.processAnimation(s.animations[t],e[0]);this._invokeAll(function(t){t.afterParse&&t.afterParse(e)})}_invokeAll(e){for(let s=0,i=this.plugins.length;s<i;s++)e(this.plugins[s])}}class Pe{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,s){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const i=this.writer,t=i.json,r=i.extensionsUsed,n={};e.name&&(n.name=e.name),n.color=e.color.toArray(),n.intensity=e.intensity,e.isDirectionalLight?n.type="directional":e.isPointLight?(n.type="point",e.distance>0&&(n.range=e.distance)):e.isSpotLight&&(n.type="spot",e.distance>0&&(n.range=e.distance),n.spot={},n.spot.innerConeAngle=(1-e.penumbra)*e.angle,n.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(t.extensions=t.extensions||{},t.extensions[this.name]={lights:[]},r[this.name]=!0);const o=t.extensions[this.name].lights;o.push(n),s.extensions=s.extensions||{},s.extensions[this.name]={light:o.length-1}}}class ze{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,s){if(!e.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;s.extensions=s.extensions||{},s.extensions[this.name]={},t[this.name]=!0,s.pbrMetallicRoughness.metallicFactor=0,s.pbrMetallicRoughness.roughnessFactor=.9}}class ke{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.clearcoat===0)return;const i=this.writer,t=i.extensionsUsed,r={};if(r.clearcoatFactor=e.clearcoat,e.clearcoatMap){const n={index:i.processTexture(e.clearcoatMap),texCoord:e.clearcoatMap.channel};i.applyTextureTransform(n,e.clearcoatMap),r.clearcoatTexture=n}if(r.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const n={index:i.processTexture(e.clearcoatRoughnessMap),texCoord:e.clearcoatRoughnessMap.channel};i.applyTextureTransform(n,e.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=n}if(e.clearcoatNormalMap){const n={index:i.processTexture(e.clearcoatNormalMap),texCoord:e.clearcoatNormalMap.channel};i.applyTextureTransform(n,e.clearcoatNormalMap),r.clearcoatNormalTexture=n}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class He{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.iridescence===0)return;const i=this.writer,t=i.extensionsUsed,r={};if(r.iridescenceFactor=e.iridescence,e.iridescenceMap){const n={index:i.processTexture(e.iridescenceMap),texCoord:e.iridescenceMap.channel};i.applyTextureTransform(n,e.iridescenceMap),r.iridescenceTexture=n}if(r.iridescenceIor=e.iridescenceIOR,r.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap){const n={index:i.processTexture(e.iridescenceThicknessMap),texCoord:e.iridescenceThicknessMap.channel};i.applyTextureTransform(n,e.iridescenceThicknessMap),r.iridescenceThicknessTexture=n}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Ve{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,t=i.extensionsUsed,r={};if(r.transmissionFactor=e.transmission,e.transmissionMap){const n={index:i.processTexture(e.transmissionMap),texCoord:e.transmissionMap.channel};i.applyTextureTransform(n,e.transmissionMap),r.transmissionTexture=n}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Ye{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,t=i.extensionsUsed,r={};if(r.thicknessFactor=e.thickness,e.thicknessMap){const n={index:i.processTexture(e.thicknessMap),texCoord:e.thicknessMap.channel};i.applyTextureTransform(n,e.thicknessMap),r.thicknessTexture=n}r.attenuationDistance=e.attenuationDistance,r.attenuationColor=e.attenuationColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class je{constructor(e){this.writer=e,this.name="KHR_materials_ior"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.ior===1.5)return;const t=this.writer.extensionsUsed,r={};r.ior=e.ior,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Ke{constructor(e){this.writer=e,this.name="KHR_materials_specular"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.specularIntensity===1&&e.specularColor.equals(_e)&&!e.specularIntensityMap&&!e.specularColorMap)return;const i=this.writer,t=i.extensionsUsed,r={};if(e.specularIntensityMap){const n={index:i.processTexture(e.specularIntensityMap),texCoord:e.specularIntensityMap.channel};i.applyTextureTransform(n,e.specularIntensityMap),r.specularTexture=n}if(e.specularColorMap){const n={index:i.processTexture(e.specularColorMap),texCoord:e.specularColorMap.channel};i.applyTextureTransform(n,e.specularColorMap),r.specularColorTexture=n}r.specularFactor=e.specularIntensity,r.specularColorFactor=e.specularColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class qe{constructor(e){this.writer=e,this.name="KHR_materials_sheen"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.sheen==0)return;const i=this.writer,t=i.extensionsUsed,r={};if(e.sheenRoughnessMap){const n={index:i.processTexture(e.sheenRoughnessMap),texCoord:e.sheenRoughnessMap.channel};i.applyTextureTransform(n,e.sheenRoughnessMap),r.sheenRoughnessTexture=n}if(e.sheenColorMap){const n={index:i.processTexture(e.sheenColorMap),texCoord:e.sheenColorMap.channel};i.applyTextureTransform(n,e.sheenColorMap),r.sheenColorTexture=n}r.sheenRoughnessFactor=e.sheenRoughness,r.sheenColorFactor=e.sheenColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class We{constructor(e){this.writer=e,this.name="KHR_materials_anisotropy"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.anisotropy==0)return;const i=this.writer,t=i.extensionsUsed,r={};if(e.anisotropyMap){const n={index:i.processTexture(e.anisotropyMap)};i.applyTextureTransform(n,e.anisotropyMap),r.anisotropyTexture=n}r.anisotropyStrength=e.anisotropy,r.anisotropyRotation=e.anisotropyRotation,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Xe{constructor(e){this.writer=e,this.name="KHR_materials_emissive_strength"}writeMaterial(e,s){if(!e.isMeshStandardMaterial||e.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,r={};r.emissiveStrength=e.emissiveIntensity,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Je{constructor(e){this.writer=e,this.name="EXT_materials_bump"}writeMaterial(e,s){if(!e.isMeshStandardMaterial||e.bumpScale===1&&!e.bumpMap)return;const i=this.writer,t=i.extensionsUsed,r={};if(e.bumpMap){const n={index:i.processTexture(e.bumpMap),texCoord:e.bumpMap.channel};i.applyTextureTransform(n,e.bumpMap),r.bumpTexture=n}r.bumpFactor=e.bumpScale,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Qe{constructor(e){this.writer=e,this.name="EXT_mesh_gpu_instancing"}writeNode(e,s){if(!e.isInstancedMesh)return;const i=this.writer,t=e,r=new Float32Array(t.count*3),n=new Float32Array(t.count*4),o=new Float32Array(t.count*3),c=new te,l=new D,h=new Le,u=new D;for(let f=0;f<t.count;f++)t.getMatrixAt(f,c),c.decompose(l,h,u),l.toArray(r,f*3),h.toArray(n,f*4),u.toArray(o,f*3);const m={TRANSLATION:i.processAccessor(new S(r,3)),ROTATION:i.processAccessor(new S(n,4)),SCALE:i.processAccessor(new S(o,3))};t.instanceColor&&(m._COLOR_0=i.processAccessor(t.instanceColor)),s.extensions=s.extensions||{},s.extensions[this.name]={attributes:m},i.extensionsUsed[this.name]=!0,i.extensionsRequired[this.name]=!0}}ne.Utils={insertKeyframe:function(a,e){const i=a.getValueSize(),t=new a.TimeBufferType(a.times.length+1),r=new a.ValueBufferType(a.values.length+i),n=a.createInterpolant(new a.ValueBufferType(i));let o;if(a.times.length===0){t[0]=e;for(let c=0;c<i;c++)r[c]=0;o=0}else if(e<a.times[0]){if(Math.abs(a.times[0]-e)<.001)return 0;t[0]=e,t.set(a.times,1),r.set(n.evaluate(e),0),r.set(a.values,i),o=0}else if(e>a.times[a.times.length-1]){if(Math.abs(a.times[a.times.length-1]-e)<.001)return a.times.length-1;t[t.length-1]=e,t.set(a.times,0),r.set(a.values,0),r.set(n.evaluate(e),a.values.length),o=t.length-1}else for(let c=0;c<a.times.length;c++){if(Math.abs(a.times[c]-e)<.001)return c;if(a.times[c]<e&&a.times[c+1]>e){t.set(a.times.slice(0,c+1),0),t[c+1]=e,t.set(a.times.slice(c+1),c+2),r.set(a.values.slice(0,(c+1)*i),0),r.set(n.evaluate(e),(c+1)*i),r.set(a.values.slice((c+1)*i),(c+2)*i),o=c+1;break}}return a.times=t,a.values=r,o},mergeMorphTargetTracks:function(a,e){const s=[],i={},t=a.tracks;for(let r=0;r<t.length;++r){let n=t[r];const o=P.parseTrackName(n.name),c=P.findNode(e,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===void 0){s.push(n);continue}if(n.createInterpolant!==n.InterpolantFactoryMethodDiscrete&&n.createInterpolant!==n.InterpolantFactoryMethodLinear){if(n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),n=n.clone(),n.setInterpolation(Me)}const l=c.morphTargetInfluences.length,h=c.morphTargetDictionary[o.propertyIndex];if(h===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);let u;if(i[c.uuid]===void 0){u=n.clone();const f=new u.ValueBufferType(l*u.times.length);for(let p=0;p<u.times.length;p++)f[p*l+h]=u.values[p];u.name=(o.nodeName||"")+".morphTargetInfluences",u.values=f,i[c.uuid]=u,s.push(u);continue}const m=n.createInterpolant(new n.ValueBufferType(1));u=i[c.uuid];for(let f=0;f<u.times.length;f++)u.values[f*l+h]=m.evaluate(u.times[f]);for(let f=0;f<n.times.length;f++){const p=this.insertKeyframe(u,n.times[f]);u.values[p*l+h]=n.values[f]}}return a.tracks=s,a}};export{ne as GLTFExporter};
