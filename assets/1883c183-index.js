import{_ as C,p as L,h as S,o}from"./d68e758f-jsxRuntime.module.js";import{u as b}from"./872a2811-useKey.js";import{b as y,f as D}from"./9b8fd788-index.js";import{S as w}from"./77f67227-Stretcher.js";import{h as k,i as x}from"./4ca98dcf-BoneManager.js";import{h as E,v as l}from"./267a0ebf-viewer.js";import{B as n}from"./976ce471-Box.js";import{a as N,b as q}from"./6310668e-DialogTitle.js";import{S as I}from"./6366100c-Gallery.js";import{M as K}from"./6b7c0efe-filterConfig.js";import{B as T}from"./15665f03-Button.js";import"./96f7f304-index.js";import"./042e6b4d-_commonjsHelpers.js";import"./1fbbf740-compat.module.js";import"./a2089eea-immer.esm.js";import"./45408441-preload-helper.js";/* empty css               */import"./4599dfe1-ModelIcon.js";import"./c697f39b-Accordion.js";import"./312ca75a-useToggleState.js";import"./d6e7d8b1-createSvgIcon.js";import"./374360b9-ButtonBase.js";import"./28ae8c8c-Popover.js";import"./542128c7-ColorButton.js";import"./b76930ce-SkipPrevious.js";import"./2cd5edc3-Close.js";import"./f669ce24-FaceSelect.js";import"./e108c24b-useIsMount.js";import"./474e7812-FacePartSelector.js";import"./0cb09c0d-Selector.js";import"./8e683838-GlowToggle.js";import"./8a20dcf8-MeshMouthSelect.js";import"./7753a7fc-FaceTexture.js";import"./25ba84b6-lists.js";import"./838f9a07-styles.js";import"./f60cacb5-index.js";import"./8ae97cac-helper.js";import"./86011457-AddWeapon.js";import"./0300fc13-index.js";import"./54296060-initAniSelectState.js";import"./422fb203-three.js";import"./e27bbfcf-CopyShader.js";import"./717175ec-ShaderPass.js";import"./c51705f5-Pass.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
