(function(){"use strict";const w=(e,t)=>t.some(n=>e instanceof n);let D,p;function S(){return D||(D=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function k(){return p||(p=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const y=new WeakMap,m=new WeakMap,l=new WeakMap;function v(e){const t=new Promise((n,r)=>{const o=()=>{e.removeEventListener("success",s),e.removeEventListener("error",a)},s=()=>{n(d(e.result)),o()},a=()=>{r(e.error),o()};e.addEventListener("success",s),e.addEventListener("error",a)});return l.set(t,e),t}function j(e){if(y.has(e))return;const t=new Promise((n,r)=>{const o=()=>{e.removeEventListener("complete",s),e.removeEventListener("error",a),e.removeEventListener("abort",a)},s=()=>{n(),o()},a=()=>{r(e.error||new DOMException("AbortError","AbortError")),o()};e.addEventListener("complete",s),e.addEventListener("error",a),e.addEventListener("abort",a)});y.set(e,t)}let h={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return y.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return d(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function M(e){h=e(h)}function A(e){return k().includes(e)?function(...t){return e.apply(g(this),t),d(this.request)}:function(...t){return d(e.apply(g(this),t))}}function O(e){return typeof e=="function"?A(e):(e instanceof IDBTransaction&&j(e),w(e,S())?new Proxy(e,h):e)}function d(e){if(e instanceof IDBRequest)return v(e);if(m.has(e))return m.get(e);const t=O(e);return t!==e&&(m.set(e,t),l.set(t,e)),t}const g=e=>l.get(e);function K(e,t,{blocked:n,upgrade:r,blocking:o,terminated:s}={}){const a=indexedDB.open(e,t),c=d(a);return r&&a.addEventListener("upgradeneeded",i=>{r(d(a.result),i.oldVersion,i.newVersion,d(a.transaction),i)}),n&&a.addEventListener("blocked",i=>n(i.oldVersion,i.newVersion,i)),c.then(i=>{s&&i.addEventListener("close",()=>s()),o&&i.addEventListener("versionchange",u=>o(u.oldVersion,u.newVersion,u))}).catch(()=>{}),c}const T=["get","getKey","getAll","getAllKeys","count"],F=["put","add","delete","clear"],I=new Map;function x(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(I.get(t))return I.get(t);const n=t.replace(/FromIndex$/,""),r=t!==n,o=F.includes(n);if(!(n in(r?IDBIndex:IDBObjectStore).prototype)||!(o||T.includes(n)))return;const s=async function(a,...c){const i=this.transaction(a,o?"readwrite":"readonly");let u=i.store;return r&&(u=u.index(c.shift())),(await Promise.all([u[n](...c),o&&i.done]))[0]};return I.set(t,s),s}M(e=>({...e,get:(t,n,r)=>x(t,n)||e.get(t,n,r),has:(t,n)=>!!x(t,n)||e.has(t,n)}));const N=["continue","continuePrimaryKey","advance"],P={},b=new WeakMap,E=new WeakMap,V={get(e,t){if(!N.includes(t))return e[t];let n=P[t];return n||(n=P[t]=function(...r){b.set(this,E.get(this)[t](...r))}),n}};async function*R(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;t=t;const n=new Proxy(t,V);for(E.set(n,t),l.set(n,g(t));t;)yield n,t=await(b.get(n)||t.continue()),b.delete(n)}function C(e,t){return t===Symbol.asyncIterator&&w(e,[IDBIndex,IDBObjectStore,IDBCursor])||t==="iterate"&&w(e,[IDBIndex,IDBObjectStore])}M(e=>({...e,get(t,n,r){return C(t,n)?R:e.get(t,n,r)},has(t,n){return C(t,n)||e.has(t,n)}}));const f=K("model-viewer",3,{upgrade(e){e.objectStoreNames.contains("model")||e.createObjectStore("model",{keyPath:"id"}).createIndex("Name","name"),e.objectStoreNames.contains("animation")||e.createObjectStore("animation",{keyPath:"fullName"}).createIndex("User","user")}}),W=async(e,t)=>{const r=(await f).transaction(t,"readwrite"),o=e.map(s=>r.store.put(s));await Promise.all([...o,r.done])},Q=async(e,t)=>await(await f).get(t,e),U=async(e,t,n)=>await(await f).getFromIndex(t,n,e),$=async(e,t,n)=>await(await f).getAllFromIndex(t,n,e),z=async(e,t,n)=>{const r=await f,o=IDBKeyRange.bound(t,n);return await r.getAll(e,o)},G=async(e,t)=>{const n=new Map;let s=await(await f).transaction(e,"readonly").store.openCursor();for(;s;)n.set(s.key,t?s.value[t]:s.value),s=await s.continue();return n},H=async(e,t,n)=>{var i,u,L;if(!e)return[];const r=[],s=(await f).transaction(t,"readonly"),a=e.toLowerCase();let c=await s.store.openCursor();for(;c;){const B=(u=(i=c.value[n])==null?void 0:i.toLowerCase)==null?void 0:u.call(i);(L=B.includes)!=null&&L.call(B,a)&&r.push(c.value),c=await c.continue()}return r};addEventListener("message",async e=>{const{type:t,store:n,value:r,index:o}=e.data;switch(t){case"put":await W(r,n),postMessage("");break;case"get":postMessage(await Q(r,n));break;case"getByIndex":postMessage(await U(r,n,o));break;case"getAllByIndex":postMessage(await $(r,n,o));break;case"getByKeyRange":const[s,a]=r.split("-");postMessage(await z(n,s,a));break;case"getMap":postMessage(await G(n,o));break;case"search":postMessage(await H(r,n,o))}})})();
