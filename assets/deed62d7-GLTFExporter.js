import{P as ie,S as re,f as oe,g as ee,h as ae,i as ce,j,k as le,T as ue,C as fe,b as W,l as G,m as he,n as pe,o as Y,p as de,q as ge,B as F,r as P,I as xe,s as Te,t as me,N as ye,u as Me,v as we,L as Ee,w as Ie,x as Re,y as Ae,z as Ne,E as be}from"./65e4a706-three.js";let O,B,L,D;function k(a,e=1/0,s=null){B||(B=new ie(2,2,1,1)),L||(L=new re({uniforms:{blitTexture:new oe(a)},vertexShader:`
            varying vec2 vUv;
            void main(){
                vUv = uv;
                gl_Position = vec4(position.xy * 1.0,0.,.999999);
            }`,fragmentShader:`
            uniform sampler2D blitTexture; 
            varying vec2 vUv;

            void main(){ 
                gl_FragColor = vec4(vUv.xy, 0, 1);
                
                #ifdef IS_SRGB
                gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );
                #else
                gl_FragColor = texture2D( blitTexture, vUv);
                #endif
            }`})),L.uniforms.blitTexture.value=a,L.defines.IS_SRGB=a.colorSpace==ee,L.needsUpdate=!0,D||(D=new ae(B,L),D.frustrumCulled=!1);const i=new ce,t=new j;t.add(D),s||(s=O=new le({antialias:!1})),s.setSize(Math.min(a.image.width,e),Math.min(a.image.height,e)),s.clear(),s.render(t,i);const n=new ue(s.domElement);return n.minFilter=a.minFilter,n.magFilter=a.magFilter,n.wrapS=a.wrapS,n.wrapT=a.wrapT,n.name=a.name,O&&(O.dispose(),O=null),n}const q={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class se{constructor(){this.pluginCallbacks=[],this.register(function(e){return new Pe(e)}),this.register(function(e){return new ze(e)}),this.register(function(e){return new ke(e)}),this.register(function(e){return new He(e)}),this.register(function(e){return new Ve(e)}),this.register(function(e){return new je(e)}),this.register(function(e){return new Ge(e)}),this.register(function(e){return new Be(e)}),this.register(function(e){return new Ye(e)}),this.register(function(e){return new Ke(e)}),this.register(function(e){return new We(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,s,i,t){const n=new De,r=[];for(let o=0,c=this.pluginCallbacks.length;o<c;o++)r.push(this.pluginCallbacks[o](n));n.setPlugins(r),n.write(e,s,t).catch(i)}parseAsync(e,s){const i=this;return new Promise(function(t,n){i.parse(e,t,n,s)})}}const g={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},H="KHR_mesh_quantization",A={};A[ye]=g.NEAREST;A[Me]=g.NEAREST_MIPMAP_NEAREST;A[we]=g.NEAREST_MIPMAP_LINEAR;A[Ee]=g.LINEAR;A[Ie]=g.LINEAR_MIPMAP_NEAREST;A[Re]=g.LINEAR_MIPMAP_LINEAR;A[Ae]=g.CLAMP_TO_EDGE;A[Ne]=g.REPEAT;A[be]=g.MIRRORED_REPEAT;const X={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},Se=new fe,J=12,Le=1179937895,_e=2,Z=8,Ce=1313821514,Ue=5130562;function v(a,e){return a.length===e.length&&a.every(function(s,i){return s===e[i]})}function ve(a){return new TextEncoder().encode(a).buffer}function Fe(a){return v(a.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function Oe(a,e,s){const i={min:new Array(a.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(a.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let t=e;t<e+s;t++)for(let n=0;n<a.itemSize;n++){let r;a.itemSize>4?r=a.array[t*a.itemSize+n]:(n===0?r=a.getX(t):n===1?r=a.getY(t):n===2?r=a.getZ(t):n===3&&(r=a.getW(t)),a.normalized===!0&&(r=Y.normalize(r,a.array))),i.min[n]=Math.min(i.min[n],r),i.max[n]=Math.max(i.max[n],r)}return i}function te(a){return Math.ceil(a/4)*4}function V(a,e=0){const s=te(a.byteLength);if(s!==a.byteLength){const i=new Uint8Array(s);if(i.set(new Uint8Array(a)),e!==0)for(let t=a.byteLength;t<s;t++)i[t]=e;return i.buffer}return a}function Q(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function $(a,e){if(a.toBlob!==void 0)return new Promise(i=>a.toBlob(i,e));let s;return e==="image/jpeg"?s=.92:e==="image/webp"&&(s=.8),a.convertToBlob({type:e,quality:s})}class De{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,s,i={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},i),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const t=this,n=t.buffers,r=t.json;i=t.options;const o=t.extensionsUsed,c=t.extensionsRequired,l=new Blob(n,{type:"application/octet-stream"}),d=Object.keys(o),u=Object.keys(c);if(d.length>0&&(r.extensionsUsed=d),u.length>0&&(r.extensionsRequired=u),r.buffers&&r.buffers.length>0&&(r.buffers[0].byteLength=l.size),i.binary===!0){const T=new FileReader;T.readAsArrayBuffer(l),T.onloadend=function(){const f=V(T.result),p=new DataView(new ArrayBuffer(Z));p.setUint32(0,f.byteLength,!0),p.setUint32(4,Ue,!0);const h=V(ve(JSON.stringify(r)),32),y=new DataView(new ArrayBuffer(Z));y.setUint32(0,h.byteLength,!0),y.setUint32(4,Ce,!0);const m=new ArrayBuffer(J),b=new DataView(m);b.setUint32(0,Le,!0),b.setUint32(4,_e,!0);const x=J+y.byteLength+h.byteLength+p.byteLength+f.byteLength;b.setUint32(8,x,!0);const M=new Blob([m,y,h,p,f],{type:"application/octet-stream"}),w=new FileReader;w.readAsArrayBuffer(M),w.onloadend=function(){s(w.result)}}}else if(r.buffers&&r.buffers.length>0){const T=new FileReader;T.readAsDataURL(l),T.onloadend=function(){const f=T.result;r.buffers[0].uri=f,s(r)}}else s(r)}serializeUserData(e,s){if(Object.keys(e.userData).length===0)return;const i=this.options,t=this.extensionsUsed;try{const n=JSON.parse(JSON.stringify(e.userData));if(i.includeCustomExtensions&&n.gltfExtensions){s.extensions===void 0&&(s.extensions={});for(const r in n.gltfExtensions)s.extensions[r]=n.gltfExtensions[r],t[r]=!0;delete n.gltfExtensions}Object.keys(n).length>0&&(s.extras=n)}catch(n){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+n.message)}}getUID(e,s=!1){if(this.uids.has(e)===!1){const t=new Map;t.set(!0,this.uid++),t.set(!1,this.uid++),this.uids.set(e,t)}return this.uids.get(e).get(s)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const i=new W;for(let t=0,n=e.count;t<n;t++)if(Math.abs(i.fromBufferAttribute(e,t).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const s=this.cache;if(s.attributesNormalized.has(e))return s.attributesNormalized.get(e);const i=e.clone(),t=new W;for(let n=0,r=i.count;n<r;n++)t.fromBufferAttribute(i,n),t.x===0&&t.y===0&&t.z===0?t.setX(1):t.normalize(),i.setXYZ(n,t.x,t.y,t.z);return s.attributesNormalized.set(e,i),i}applyTextureTransform(e,s){let i=!1;const t={};(s.offset.x!==0||s.offset.y!==0)&&(t.offset=s.offset.toArray(),i=!0),s.rotation!==0&&(t.rotation=s.rotation,i=!0),(s.repeat.x!==1||s.repeat.y!==1)&&(t.scale=s.repeat.toArray(),i=!0),i&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=t,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,s){if(e===s)return e;function i(f){return f.colorSpace===ee?function(h){return h<.04045?h*.0773993808:Math.pow(h*.9478672986+.0521327014,2.4)}:function(h){return h}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof G&&(e=k(e)),s instanceof G&&(s=k(s));const t=e?e.image:null,n=s?s.image:null,r=Math.max(t?t.width:0,n?n.width:0),o=Math.max(t?t.height:0,n?n.height:0),c=Q();c.width=r,c.height=o;const l=c.getContext("2d");l.fillStyle="#00ffff",l.fillRect(0,0,r,o);const d=l.getImageData(0,0,r,o);if(t){l.drawImage(t,0,0,r,o);const f=i(e),p=l.getImageData(0,0,r,o).data;for(let h=2;h<p.length;h+=4)d.data[h]=f(p[h]/256)*256}if(n){l.drawImage(n,0,0,r,o);const f=i(s),p=l.getImageData(0,0,r,o).data;for(let h=1;h<p.length;h+=4)d.data[h]=f(p[h]/256)*256}l.putImageData(d,0,0);const T=(e||s).clone();return T.source=new he(c),T.colorSpace=pe,T.channel=(e||s).channel,e&&s&&e.channel!==s.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),T}processBuffer(e){const s=this.json,i=this.buffers;return s.buffers||(s.buffers=[{byteLength:0}]),i.push(e),0}processBufferView(e,s,i,t,n){const r=this.json;r.bufferViews||(r.bufferViews=[]);let o;switch(s){case g.BYTE:case g.UNSIGNED_BYTE:o=1;break;case g.SHORT:case g.UNSIGNED_SHORT:o=2;break;default:o=4}const c=te(t*e.itemSize*o),l=new DataView(new ArrayBuffer(c));let d=0;for(let f=i;f<i+t;f++)for(let p=0;p<e.itemSize;p++){let h;e.itemSize>4?h=e.array[f*e.itemSize+p]:(p===0?h=e.getX(f):p===1?h=e.getY(f):p===2?h=e.getZ(f):p===3&&(h=e.getW(f)),e.normalized===!0&&(h=Y.normalize(h,e.array))),s===g.FLOAT?l.setFloat32(d,h,!0):s===g.INT?l.setInt32(d,h,!0):s===g.UNSIGNED_INT?l.setUint32(d,h,!0):s===g.SHORT?l.setInt16(d,h,!0):s===g.UNSIGNED_SHORT?l.setUint16(d,h,!0):s===g.BYTE?l.setInt8(d,h):s===g.UNSIGNED_BYTE&&l.setUint8(d,h),d+=o}const u={buffer:this.processBuffer(l.buffer),byteOffset:this.byteOffset,byteLength:c};return n!==void 0&&(u.target=n),n===g.ARRAY_BUFFER&&(u.byteStride=e.itemSize*o),this.byteOffset+=c,r.bufferViews.push(u),{id:r.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const s=this,i=s.json;return i.bufferViews||(i.bufferViews=[]),new Promise(function(t){const n=new FileReader;n.readAsArrayBuffer(e),n.onloadend=function(){const r=V(n.result),o={buffer:s.processBuffer(r),byteOffset:s.byteOffset,byteLength:r.byteLength};s.byteOffset+=r.byteLength,t(i.bufferViews.push(o)-1)}})}processAccessor(e,s,i,t){const n=this.json,r={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let o;if(e.array.constructor===Float32Array)o=g.FLOAT;else if(e.array.constructor===Int32Array)o=g.INT;else if(e.array.constructor===Uint32Array)o=g.UNSIGNED_INT;else if(e.array.constructor===Int16Array)o=g.SHORT;else if(e.array.constructor===Uint16Array)o=g.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)o=g.BYTE;else if(e.array.constructor===Uint8Array)o=g.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(i===void 0&&(i=0),t===void 0&&(t=e.count),t===0)return null;const c=Oe(e,i,t);let l;s!==void 0&&(l=e===s.index?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER);const d=this.processBufferView(e,o,i,t,l),u={bufferView:d.id,byteOffset:d.byteOffset,componentType:o,count:t,max:c.max,min:c.min,type:r[e.itemSize]};return e.normalized===!0&&(u.normalized=!0),n.accessors||(n.accessors=[]),n.accessors.push(u)-1}processImage(e,s,i,t="image/png"){if(e!==null){const n=this,r=n.cache,o=n.json,c=n.options,l=n.pending;r.images.has(e)||r.images.set(e,{});const d=r.images.get(e),u=t+":flipY/"+i.toString();if(d[u]!==void 0)return d[u];o.images||(o.images=[]);const T={mimeType:t},f=Q();f.width=Math.min(e.width,c.maxTextureSize),f.height=Math.min(e.height,c.maxTextureSize);const p=f.getContext("2d");if(i===!0&&(p.translate(0,f.height),p.scale(1,-1)),e.data!==void 0){s!==de&&console.error("GLTFExporter: Only RGBAFormat is supported.",s),(e.width>c.maxTextureSize||e.height>c.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const y=new Uint8ClampedArray(e.height*e.width*4);for(let m=0;m<y.length;m+=4)y[m+0]=e.data[m+0],y[m+1]=e.data[m+1],y[m+2]=e.data[m+2],y[m+3]=e.data[m+3];p.putImageData(new ImageData(y,e.width,e.height),0,0)}else p.drawImage(e,0,0,f.width,f.height);c.binary===!0?l.push($(f,t).then(y=>n.processBufferViewImage(y)).then(y=>{T.bufferView=y})):f.toDataURL!==void 0?T.uri=f.toDataURL(t):l.push($(f,t).then(y=>new FileReader().readAsDataURL(y)).then(y=>{T.uri=y}));const h=o.images.push(T)-1;return d[u]=h,h}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const s=this.json;s.samplers||(s.samplers=[]);const i={magFilter:A[e.magFilter],minFilter:A[e.minFilter],wrapS:A[e.wrapS],wrapT:A[e.wrapT]};return s.samplers.push(i)-1}processTexture(e){const i=this.options,t=this.cache,n=this.json;if(t.textures.has(e))return t.textures.get(e);n.textures||(n.textures=[]),e instanceof G&&(e=k(e,i.maxTextureSize));let r=e.userData.mimeType;r==="image/webp"&&(r="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,r)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const c=n.textures.push(o)-1;return t.textures.set(e,c),c}processMaterial(e){const s=this.cache,i=this.json;if(s.materials.has(e))return s.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;i.materials||(i.materials=[]);const t={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const n=e.color.toArray().concat([e.opacity]);if(v(n,[1,1,1,1])||(t.pbrMetallicRoughness.baseColorFactor=n),e.isMeshStandardMaterial?(t.pbrMetallicRoughness.metallicFactor=e.metalness,t.pbrMetallicRoughness.roughnessFactor=e.roughness):(t.pbrMetallicRoughness.metallicFactor=.5,t.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const o=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),c={index:this.processTexture(o),channel:o.channel};this.applyTextureTransform(c,o),t.pbrMetallicRoughness.metallicRoughnessTexture=c}if(e.map){const o={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(o,e.map),t.pbrMetallicRoughness.baseColorTexture=o}if(e.emissive){const o=e.emissive;if(Math.max(o.r,o.g,o.b)>0&&(t.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),t.emissiveTexture=l}}if(e.normalMap){const o={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(o.scale=e.normalScale.x),this.applyTextureTransform(o,e.normalMap),t.normalTexture=o}if(e.aoMap){const o={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(o.strength=e.aoMapIntensity),this.applyTextureTransform(o,e.aoMap),t.occlusionTexture=o}e.transparent?t.alphaMode="BLEND":e.alphaTest>0&&(t.alphaMode="MASK",t.alphaCutoff=e.alphaTest),e.side===ge&&(t.doubleSided=!0),e.name!==""&&(t.name=e.name),this.serializeUserData(e,t),this._invokeAll(function(o){o.writeMaterial&&o.writeMaterial(e,t)});const r=i.materials.push(t)-1;return s.materials.set(e,r),r}processMesh(e){const s=this.cache,i=this.json,t=[e.geometry.uuid];if(Array.isArray(e.material))for(let x=0,M=e.material.length;x<M;x++)t.push(e.material[x].uuid);else t.push(e.material.uuid);const n=t.join(":");if(s.meshes.has(n))return s.meshes.get(n);const r=e.geometry;let o;e.isLineSegments?o=g.LINES:e.isLineLoop?o=g.LINE_LOOP:e.isLine?o=g.LINE_STRIP:e.isPoints?o=g.POINTS:o=e.material.wireframe?g.LINES:g.TRIANGLES;const c={},l={},d=[],u=[],T={uv:"TEXCOORD_0",uv1:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},f=r.getAttribute("normal");f!==void 0&&!this.isNormalizedNormalAttribute(f)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),r.setAttribute("normal",this.createNormalizedNormalAttribute(f)));let p=null;for(let x in r.attributes){if(x.slice(0,5)==="morph")continue;const M=r.attributes[x];if(x=T[x]||x.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(x)||(x="_"+x),s.attributes.has(this.getUID(M))){l[x]=s.attributes.get(this.getUID(M));continue}p=null;const E=M.array;x==="JOINTS_0"&&!(E instanceof Uint16Array)&&!(E instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new F(new Uint16Array(E),M.itemSize,M.normalized));const R=this.processAccessor(p||M,r);R!==null&&(x.startsWith("_")||this.detectMeshQuantization(x,M),l[x]=R,s.attributes.set(this.getUID(M),R))}if(f!==void 0&&r.setAttribute("normal",f),Object.keys(l).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const x=[],M=[],w={};if(e.morphTargetDictionary!==void 0)for(const E in e.morphTargetDictionary)w[e.morphTargetDictionary[E]]=E;for(let E=0;E<e.morphTargetInfluences.length;++E){const R={};let K=!1;for(const _ in r.morphAttributes){if(_!=="position"&&_!=="normal"){K||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),K=!0);continue}const N=r.morphAttributes[_][E],z=_.toUpperCase(),C=r.attributes[_];if(s.attributes.has(this.getUID(N,!0))){R[z]=s.attributes.get(this.getUID(N,!0));continue}const U=N.clone();if(!r.morphTargetsRelative)for(let I=0,ne=N.count;I<ne;I++)for(let S=0;S<N.itemSize;S++)S===0&&U.setX(I,N.getX(I)-C.getX(I)),S===1&&U.setY(I,N.getY(I)-C.getY(I)),S===2&&U.setZ(I,N.getZ(I)-C.getZ(I)),S===3&&U.setW(I,N.getW(I)-C.getW(I));R[z]=this.processAccessor(U,r),s.attributes.set(this.getUID(C,!0),R[z])}u.push(R),x.push(e.morphTargetInfluences[E]),e.morphTargetDictionary!==void 0&&M.push(w[E])}c.weights=x,M.length>0&&(c.extras={},c.extras.targetNames=M)}const h=Array.isArray(e.material);if(h&&r.groups.length===0)return null;const y=h?e.material:[e.material],m=h?r.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let x=0,M=m.length;x<M;x++){const w={mode:o,attributes:l};if(this.serializeUserData(r,w),u.length>0&&(w.targets=u),r.index!==null){let R=this.getUID(r.index);(m[x].start!==void 0||m[x].count!==void 0)&&(R+=":"+m[x].start+":"+m[x].count),s.attributes.has(R)?w.indices=s.attributes.get(R):(w.indices=this.processAccessor(r.index,r,m[x].start,m[x].count),s.attributes.set(R,w.indices)),w.indices===null&&delete w.indices}const E=this.processMaterial(y[m[x].materialIndex]);E!==null&&(w.material=E),d.push(w)}c.primitives=d,i.meshes||(i.meshes=[]),this._invokeAll(function(x){x.writeMesh&&x.writeMesh(e,c)});const b=i.meshes.push(c)-1;return s.meshes.set(n,b),b}detectMeshQuantization(e,s){if(this.extensionsUsed[H])return;let i;switch(s.array.constructor){case Int8Array:i="byte";break;case Uint8Array:i="unsigned byte";break;case Int16Array:i="short";break;case Uint16Array:i="unsigned short";break;default:return}s.normalized&&(i+=" normalized");const t=e.split("_",1)[0];q[t]&&q[t].includes(i)&&(this.extensionsUsed[H]=!0,this.extensionsRequired[H]=!0)}processCamera(e){const s=this.json;s.cameras||(s.cameras=[]);const i=e.isOrthographicCamera,t={type:i?"orthographic":"perspective"};return i?t.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:t.perspective={aspectRatio:e.aspect,yfov:Y.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(t.name=e.type),s.cameras.push(t)-1}processAnimation(e,s){const i=this.json,t=this.nodeMap;i.animations||(i.animations=[]),e=se.Utils.mergeMorphTargetTracks(e.clone(),s);const n=e.tracks,r=[],o=[];for(let c=0;c<n.length;++c){const l=n[c],d=P.parseTrackName(l.name);let u=P.findNode(s,d.nodeName);const T=X[d.propertyName];if(d.objectName==="bones"&&(u.isSkinnedMesh===!0?u=u.skeleton.getBoneByName(d.objectIndex):u=void 0),!u||!T)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',l.name),null;const f=1;let p=l.values.length/l.times.length;T===X.morphTargetInfluences&&(p/=u.morphTargetInfluences.length);let h;l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(h="CUBICSPLINE",p/=3):l.getInterpolation()===xe?h="STEP":h="LINEAR",o.push({input:this.processAccessor(new F(l.times,f)),output:this.processAccessor(new F(l.values,p)),interpolation:h}),r.push({sampler:o.length-1,target:{node:t.get(u),path:T}})}return i.animations.push({name:e.name||"clip_"+i.animations.length,samplers:o,channels:r}),i.animations.length-1}processSkin(e){const s=this.json,i=this.nodeMap,t=s.nodes[i.get(e)],n=e.skeleton;if(n===void 0)return null;const r=e.skeleton.bones[0];if(r===void 0)return null;const o=[],c=new Float32Array(n.bones.length*16),l=new Te;for(let u=0;u<n.bones.length;++u)o.push(i.get(n.bones[u])),l.copy(n.boneInverses[u]),l.multiply(e.bindMatrix).toArray(c,u*16);return s.skins===void 0&&(s.skins=[]),s.skins.push({inverseBindMatrices:this.processAccessor(new F(c,16)),joints:o,skeleton:i.get(r)}),t.skin=s.skins.length-1}processNode(e){const s=this.json,i=this.options,t=this.nodeMap;s.nodes||(s.nodes=[]);const n={};if(i.trs){const o=e.quaternion.toArray(),c=e.position.toArray(),l=e.scale.toArray();v(o,[0,0,0,1])||(n.rotation=o),v(c,[0,0,0])||(n.translation=c),v(l,[1,1,1])||(n.scale=l)}else e.matrixAutoUpdate&&e.updateMatrix(),Fe(e.matrix)===!1&&(n.matrix=e.matrix.elements);if(e.name!==""&&(n.name=String(e.name)),this.serializeUserData(e,n),e.isMesh||e.isLine||e.isPoints){const o=this.processMesh(e);o!==null&&(n.mesh=o)}else e.isCamera&&(n.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const o=[];for(let c=0,l=e.children.length;c<l;c++){const d=e.children[c];if(d.visible||i.onlyVisible===!1){const u=this.processNode(d);u!==null&&o.push(u)}}o.length>0&&(n.children=o)}this._invokeAll(function(o){o.writeNode&&o.writeNode(e,n)});const r=s.nodes.push(n)-1;return t.set(e,r),r}processScene(e){const s=this.json,i=this.options;s.scenes||(s.scenes=[],s.scene=0);const t={};e.name!==""&&(t.name=e.name),s.scenes.push(t);const n=[];for(let r=0,o=e.children.length;r<o;r++){const c=e.children[r];if(c.visible||i.onlyVisible===!1){const l=this.processNode(c);l!==null&&n.push(l)}}n.length>0&&(t.nodes=n),this.serializeUserData(e,t)}processObjects(e){const s=new j;s.name="AuxScene";for(let i=0;i<e.length;i++)s.children.push(e[i]);this.processScene(s)}processInput(e){const s=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(t){t.beforeParse&&t.beforeParse(e)});const i=[];for(let t=0;t<e.length;t++)e[t]instanceof j?this.processScene(e[t]):i.push(e[t]);i.length>0&&this.processObjects(i);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let t=0;t<s.animations.length;++t)this.processAnimation(s.animations[t],e[0]);this._invokeAll(function(t){t.afterParse&&t.afterParse(e)})}_invokeAll(e){for(let s=0,i=this.plugins.length;s<i;s++)e(this.plugins[s])}}class Pe{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,s){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const i=this.writer,t=i.json,n=i.extensionsUsed,r={};e.name&&(r.name=e.name),r.color=e.color.toArray(),r.intensity=e.intensity,e.isDirectionalLight?r.type="directional":e.isPointLight?(r.type="point",e.distance>0&&(r.range=e.distance)):e.isSpotLight&&(r.type="spot",e.distance>0&&(r.range=e.distance),r.spot={},r.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,r.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),n[this.name]||(t.extensions=t.extensions||{},t.extensions[this.name]={lights:[]},n[this.name]=!0);const o=t.extensions[this.name].lights;o.push(r),s.extensions=s.extensions||{},s.extensions[this.name]={light:o.length-1}}}class ze{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,s){if(!e.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;s.extensions=s.extensions||{},s.extensions[this.name]={},t[this.name]=!0,s.pbrMetallicRoughness.metallicFactor=0,s.pbrMetallicRoughness.roughnessFactor=.9}}class Ge{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.clearcoat===0)return;const i=this.writer,t=i.extensionsUsed,n={};if(n.clearcoatFactor=e.clearcoat,e.clearcoatMap){const r={index:i.processTexture(e.clearcoatMap),texCoord:e.clearcoatMap.channel};i.applyTextureTransform(r,e.clearcoatMap),n.clearcoatTexture=r}if(n.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const r={index:i.processTexture(e.clearcoatRoughnessMap),texCoord:e.clearcoatRoughnessMap.channel};i.applyTextureTransform(r,e.clearcoatRoughnessMap),n.clearcoatRoughnessTexture=r}if(e.clearcoatNormalMap){const r={index:i.processTexture(e.clearcoatNormalMap),texCoord:e.clearcoatNormalMap.channel};i.applyTextureTransform(r,e.clearcoatNormalMap),n.clearcoatNormalTexture=r}s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class Be{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.iridescence===0)return;const i=this.writer,t=i.extensionsUsed,n={};if(n.iridescenceFactor=e.iridescence,e.iridescenceMap){const r={index:i.processTexture(e.iridescenceMap),texCoord:e.iridescenceMap.channel};i.applyTextureTransform(r,e.iridescenceMap),n.iridescenceTexture=r}if(n.iridescenceIor=e.iridescenceIOR,n.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],n.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap){const r={index:i.processTexture(e.iridescenceThicknessMap),texCoord:e.iridescenceThicknessMap.channel};i.applyTextureTransform(r,e.iridescenceThicknessMap),n.iridescenceThicknessTexture=r}s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class ke{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,t=i.extensionsUsed,n={};if(n.transmissionFactor=e.transmission,e.transmissionMap){const r={index:i.processTexture(e.transmissionMap),texCoord:e.transmissionMap.channel};i.applyTextureTransform(r,e.transmissionMap),n.transmissionTexture=r}s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class He{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,t=i.extensionsUsed,n={};if(n.thicknessFactor=e.thickness,e.thicknessMap){const r={index:i.processTexture(e.thicknessMap),texCoord:e.thicknessMap.channel};i.applyTextureTransform(r,e.thicknessMap),n.thicknessTexture=r}n.attenuationDistance=e.attenuationDistance,n.attenuationColor=e.attenuationColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class Ve{constructor(e){this.writer=e,this.name="KHR_materials_ior"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.ior===1.5)return;const t=this.writer.extensionsUsed,n={};n.ior=e.ior,s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class je{constructor(e){this.writer=e,this.name="KHR_materials_specular"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.specularIntensity===1&&e.specularColor.equals(Se)&&!e.specularIntensityMap&&!e.specularColorTexture)return;const i=this.writer,t=i.extensionsUsed,n={};if(e.specularIntensityMap){const r={index:i.processTexture(e.specularIntensityMap),texCoord:e.specularIntensityMap.channel};i.applyTextureTransform(r,e.specularIntensityMap),n.specularTexture=r}if(e.specularColorMap){const r={index:i.processTexture(e.specularColorMap),texCoord:e.specularColorMap.channel};i.applyTextureTransform(r,e.specularColorMap),n.specularColorTexture=r}n.specularFactor=e.specularIntensity,n.specularColorFactor=e.specularColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class Ye{constructor(e){this.writer=e,this.name="KHR_materials_sheen"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.sheen==0)return;const i=this.writer,t=i.extensionsUsed,n={};if(e.sheenRoughnessMap){const r={index:i.processTexture(e.sheenRoughnessMap),texCoord:e.sheenRoughnessMap.channel};i.applyTextureTransform(r,e.sheenRoughnessMap),n.sheenRoughnessTexture=r}if(e.sheenColorMap){const r={index:i.processTexture(e.sheenColorMap),texCoord:e.sheenColorMap.channel};i.applyTextureTransform(r,e.sheenColorMap),n.sheenColorTexture=r}n.sheenRoughnessFactor=e.sheenRoughness,n.sheenColorFactor=e.sheenColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class Ke{constructor(e){this.writer=e,this.name="KHR_materials_anisotropy"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.anisotropy==0)return;const i=this.writer,t=i.extensionsUsed,n={};if(e.anisotropyMap){const r={index:i.processTexture(e.anisotropyMap)};i.applyTextureTransform(r,e.anisotropyMap),n.anisotropyTexture=r}n.anisotropyStrength=e.anisotropy,n.anisotropyRotation=e.anisotropyRotation,s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}class We{constructor(e){this.writer=e,this.name="KHR_materials_emissive_strength"}writeMaterial(e,s){if(!e.isMeshStandardMaterial||e.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,n={};n.emissiveStrength=e.emissiveIntensity,s.extensions=s.extensions||{},s.extensions[this.name]=n,t[this.name]=!0}}se.Utils={insertKeyframe:function(a,e){const i=a.getValueSize(),t=new a.TimeBufferType(a.times.length+1),n=new a.ValueBufferType(a.values.length+i),r=a.createInterpolant(new a.ValueBufferType(i));let o;if(a.times.length===0){t[0]=e;for(let c=0;c<i;c++)n[c]=0;o=0}else if(e<a.times[0]){if(Math.abs(a.times[0]-e)<.001)return 0;t[0]=e,t.set(a.times,1),n.set(r.evaluate(e),0),n.set(a.values,i),o=0}else if(e>a.times[a.times.length-1]){if(Math.abs(a.times[a.times.length-1]-e)<.001)return a.times.length-1;t[t.length-1]=e,t.set(a.times,0),n.set(a.values,0),n.set(r.evaluate(e),a.values.length),o=t.length-1}else for(let c=0;c<a.times.length;c++){if(Math.abs(a.times[c]-e)<.001)return c;if(a.times[c]<e&&a.times[c+1]>e){t.set(a.times.slice(0,c+1),0),t[c+1]=e,t.set(a.times.slice(c+1),c+2),n.set(a.values.slice(0,(c+1)*i),0),n.set(r.evaluate(e),(c+1)*i),n.set(a.values.slice((c+1)*i),(c+2)*i),o=c+1;break}}return a.times=t,a.values=n,o},mergeMorphTargetTracks:function(a,e){const s=[],i={},t=a.tracks;for(let n=0;n<t.length;++n){let r=t[n];const o=P.parseTrackName(r.name),c=P.findNode(e,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===void 0){s.push(r);continue}if(r.createInterpolant!==r.InterpolantFactoryMethodDiscrete&&r.createInterpolant!==r.InterpolantFactoryMethodLinear){if(r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),r=r.clone(),r.setInterpolation(me)}const l=c.morphTargetInfluences.length,d=c.morphTargetDictionary[o.propertyIndex];if(d===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);let u;if(i[c.uuid]===void 0){u=r.clone();const f=new u.ValueBufferType(l*u.times.length);for(let p=0;p<u.times.length;p++)f[p*l+d]=u.values[p];u.name=(o.nodeName||"")+".morphTargetInfluences",u.values=f,i[c.uuid]=u,s.push(u);continue}const T=r.createInterpolant(new r.ValueBufferType(1));u=i[c.uuid];for(let f=0;f<u.times.length;f++)u.values[f*l+d]=T.evaluate(u.times[f]);for(let f=0;f<r.times.length;f++){const p=this.insertKeyframe(u,r.times[f]);u.values[p*l+d]=r.values[f]}}return a.tracks=s,a}};export{se as GLTFExporter};
