import{_ as C,p as L,h as S,o}from"./a481e55d-jsxRuntime.module.js";import{u as b}from"./368b29c2-useKey.js";import{b as y,f as D}from"./c652b232-index.js";import{S as w}from"./bdfe762c-Stretcher.js";import{h as k,i as x}from"./acc31192-BoneManager.js";import{h as E,v as l}from"./267a0ebf-viewer.js";import{B as n}from"./04aaacdc-Box.js";import{a as N,b as q}from"./c94e5ab4-DialogTitle.js";import{S as I}from"./e3bebd5d-Gallery.js";import{M as K}from"./73090172-filterConfig.js";import{B as T}from"./cc63d885-Button.js";import"./0037cfc4-index.js";import"./042e6b4d-_commonjsHelpers.js";import"./6e6bf9f0-compat.module.js";import"./a2089eea-immer.esm.js";import"./45408441-preload-helper.js";/* empty css               */import"./11e2c849-ModelIcon.js";import"./f44a2ebf-Accordion.js";import"./2b8c3014-useToggleState.js";import"./c48bc004-createSvgIcon.js";import"./65427c65-ButtonBase.js";import"./7424ac65-Popover.js";import"./ec20e80e-ColorButton.js";import"./ccbcfece-SkipPrevious.js";import"./938821cc-Close.js";import"./68fbf373-FaceSelect.js";import"./01c1aa6f-useIsMount.js";import"./eec81504-FacePartSelector.js";import"./107e4d3c-Selector.js";import"./32598b2e-GlowToggle.js";import"./fa1af60d-MeshMouthSelect.js";import"./cf8ce4aa-FaceTexture.js";import"./37281608-lists.js";import"./01536837-styles.js";import"./f60cacb5-index.js";import"./8ae97cac-helper.js";import"./4864e7bd-AddWeapon.js";import"./8f7b8cc3-index.js";import"./54296060-initAniSelectState.js";import"./422fb203-three.js";import"./e27bbfcf-CopyShader.js";import"./717175ec-ShaderPass.js";import"./c51705f5-Pass.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
