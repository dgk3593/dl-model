import{_ as C,a as L,h as S,o}from"./888d32ea-jsxRuntime.module.js";import{u as b}from"./af72cc77-useKey.js";import{b as y,f as D}from"./3b11bc31-index.js";import{S as w}from"./8f557732-Stretcher.js";import{h as k,i as x}from"./7c86ca6e-BoneManager.js";import{h as E,v as l}from"./1c32777d-viewer.js";import{B as n}from"./fa2036ae-Box.js";import{a as N,b as q}from"./65cb6644-DialogTitle.js";import{S as I}from"./3062c648-Gallery.js";import{M as K}from"./0183e356-filterConfig.js";import{B as T}from"./b44d1d10-Button.js";import"./c64ba8b7-index.js";import"./042e6b4d-_commonjsHelpers.js";import"./264cfb41-compat.module.js";import"./c9760ca8-immer.esm.js";import"./45408441-preload-helper.js";/* empty css               */import"./57fc3e86-ModelIcon.js";import"./bf129c6a-Accordion.js";import"./6e0ca8fb-useToggleState.js";import"./fa80b542-createSvgIcon.js";import"./c83da345-ButtonBase.js";import"./94c18eb0-Popover.js";import"./af5d734b-ColorButton.js";import"./d1f9bfef-SkipPrevious.js";import"./5cbe176d-Close.js";import"./4c367c21-FaceSelect.js";import"./a7b8341b-useIsMount.js";import"./13690432-FacePartSelector.js";import"./f1a351cd-Selector.js";import"./1649c291-GlowToggle.js";import"./f630b9b4-MeshMouthSelect.js";import"./61d90a28-FaceTexture.js";import"./85192977-lists.js";import"./3cdedd30-styles.js";import"./f60cacb5-index.js";import"./96db7f8c-helper.js";import"./2359d085-AddWeapon.js";import"./a8f2bbf5-index.js";import"./54296060-initAniSelectState.js";import"./416e9bf6-three.js";import"./e27bbfcf-CopyShader.js";import"./ef11c09e-ShaderPass.js";import"./13b127e2-Pass.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
